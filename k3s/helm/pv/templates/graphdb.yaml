---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "pv-volume-db"
  labels:
    type: local
spec:
  storageClassName: local-path
  capacity:
    storage: "5Gi"
  accessModes:
    - "ReadWriteOnce"
  hostPath:
    path: {{ .Values.pvvals.storagePath }}/db
  persistentVolumeReclaimPolicy: Recycle
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: pontus-track-claim0
  name: pontus-track-claim0
spec:
  volumeName: pv-volume-db
  #storageClassName: local-storage
  storageClassName: local-path
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    io.kompose.network/pontusvision: "true"
    io.kompose.service: graphdb-nifi
  name: graphdb-nifi
spec:
  containers:
#  - args:
#    - /bin/bash
#    - -c
#    - |2 
#      #echo Waiting for elasticsearch service start...;\n  #while ! nc -z elasticsearch
#      #do\n    #sleep 1;\n  #done;\n  echo Connected!;\n
#      #echo "HEELLLLOOO"
#      #/usr/bin/s3fs ${S3_BUCKET} ${MOUNT_POINT} -o uid=1000,gid=1000,use_cache=/tmp,url=https://s3.amazonaws.com,endpoint=${REGION},iam_role=${IAM_ROLE},allow_other,nosuid,nonempty,nodev,default_acl=${S3_ACL},retries=5 -d
#      #echo "HEELLLLOOO"
#      LD_LIBRARY_PATH=:/tmp
#      /orientdb/bin/server.sh
  - env:
    - name: ORIENTDB_ROOT_PASSWORD
      valueFrom:
        #configMapKeyRef:
        secretKeyRef:
          name: pontus-graphdb
          key: ORIENTDB_ROOT_PASSWORD
    - name: PV_RIPD_ORG
      value: "<ADD YOUR ORGANIZATION NAME>"
    - name: PV_RIPD_DPO_NAME
      value: "<ADD YOUR DPO NAME>"
    - name: PV_RIPD_DPO_EMAIL
      value: "<ADD YOUR DPO EMAIL>"
    - name: PV_DSAR_DPO_NAME
      value: "<ADD YOUR DPO NAME>"
    - name: PV_DSAR_DPO_EMAIL
      value: "<ADD YOUR DPO EMAIL>"
    - name: PV_RIPD_DPO_PHONE
      value: "<ADD YOUR DPO PHONE>"
    - name: PV_USE_JWT_AUTH
      value: "true"
    - name: PV_KEYCLOAK_PUB_KEY
      value: "{{ .Values.pvvals.keycloakPubKey }}"
#    - name: AWS_ACCESS_KEY_ID
#      valueFrom:
#        #configMapKeyRef:
#        secretKeyRef:
#          name: pontus-graphdb
#          key: AWS_ACCESS_KEY_ID
#    - name: AWS_SECRET_ACCESS_KEY
#      valueFrom:
#        #configMapKeyRef:
#        secretKeyRef:
#          name: pontus-graphdb
#          key: AWS_SECRET_ACCESS_KEY
    image: {{ .Values.pvvals.imageVers.graphdb }}
    imagePullPolicy: "Always"
    securityContext:
      privileged: true        # cannot be changed, or Object Storage Service Bucket cannot be attached

    name: graphdb-nifi
    ports:
    - containerPort: 8183
    - containerPort: 7000
    - containerPort: 3001
    - containerPort: 2480
    - containerPort: 5007
    resources: {}
    volumeMounts:
            #- mountPath: /run/secrets/mapping-sasslesforce-graph
            #subPath: mapping-salesforce-graph
            #name: mapping-salesforce-graph
    - mountPath: /orientdb/databases
      name: orientdb-data
      subPath: databases
    - mountPath: /orientdb/backup
      name: orientdb-data
      subPath: backup

  hostname: graphdb-nifi
  restartPolicy: OnFailure
  subdomain: pontus-demo-com
  volumes:
  - name: mapping-salesforce-graph
    secret:
      secretName: mapping-salesforce-graph

  - name: orientdb-data
    persistentVolumeClaim:
      claimName: pontus-track-claim0

status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f gdpr-odb-grafana-latest.yml convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: graphdb-nifi
  name: graphdb-nifi
spec:
  ports:
  - name: "8182"
    port: 8182
    targetPort: 8183
  - name: "8183"
    port: 8183
    targetPort: 8183
  - name: "7000"
    port: 7000
    targetPort: 7000
  - name: "3001"
    port: 3001
    targetPort: 3001
  - name: "2480"
    port: 2480
    targetPort: 2480
  - name: "5009"
    port: 5009
    targetPort: 5007
  selector:
    io.kompose.service: graphdb-nifi
status:
  loadBalancer: {}
